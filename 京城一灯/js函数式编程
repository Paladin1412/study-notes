## javascript functional programming

### 一. 函数式编程思维
范畴论 Category Theory
1. 函数式编程是范畴论的数学分支，是一门很复杂的数学，认为世界上所有概念体系都可以抽象出一个个范畴。
2. 彼此之间存在某种关系概念，事物，对象等等，都构成范畴。任何事物只要找出他们之间的关系，就能定义。
3. 箭头表示范畴成员之间的关系，正式的名称叫做态射，范畴论认为，同一个范畴的所有成员，就是不同状态的变形，通过态射，一个成员可以变形成另一个成员。

所有成员是一个集合，变形关系是函数

函数式编程基础理论
1. 函数式编程 其实相对于计算机的历史而言是一个非常古老的概念，设置早于第一台计算机的诞生。函数式编程的基础模型来源于λ演算，而λ演算并非设计于在计算机上执行，他是在20世纪三十年代引入的一套用于研究函数定义，函数应用和递归的形式系统。
2. 函数式编程不是用函数来编程，也不是传统的面向过程编程，主旨在于将复杂的函数复合成简单的函数(计算理论，或者递归论，或者拉姆达运算)，运算过程尽量写成一系列嵌套的函数调用
3. javascript 是披着C外衣的lisp
4. 真正的火热是随着React的高阶函数而逐步升温。
### 二. 函数式编程常用核心概念
### 三. 当下函数式编程最热的库
### 四. 函数式编程的实际应用场景