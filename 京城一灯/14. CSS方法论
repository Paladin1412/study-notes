## css分层

css有语义化的命名约定和css层的分离，将有助于它的可扩展性，性能的提高和代码的组织管理
大量的样式，覆盖，权重和很多!important, 分好层可以让团队命名统一规范，方便维护。
有责任感的去命名你的选择器。

- SMACSS
base 设定标签越苏的预设值
layout 整个网站的大架构的外观
module 应用在不同页面的公共模块
state 定义元素不同的状态
theme: 画面上所有主视觉的定义，border-color, background
修饰符用-,子元素用__
- BEM
BEM和SMACSS非常类似，主要用来如何给项目命名，一个简单命名更容易让别人一起工作，比如选项卡导航是一个块（Block），这个块里的元素的是其中标签之一，而当前选项卡是一个修饰状态。
block 代表了更高级别的抽象或组件
block__element 代表block的后台，用于形成一个完整的block的整体。
.block--modifier 代表block的不同状态
修饰符使用的是_, 子模块使用__符号。（不用一个-的原因是css单词连接）
- SUIT
- ACSS
原子化的css
考虑如何设计一个系统的接口，院子是床架一个区块的最基本的特质，比如说表单，由于多个表单组件组成，网站由多个模块组成。
- ITCSS

### CSS WorkFlow
css工作流  cascading style sheets

- css预处理
sass, less styles
变量
混合(minxin)extend
嵌套规则
运算
函数
NamesPaces & Accessors
Scope
注释
- css后处理器
css 压缩， clean-css
自动添加浏览器前缀 autoprefixer
css更加美观排序csscomb
reword渠道styles后处理器
前后通吃postcss

### nextcss
https://cssnext.github.io/playground

:root { // 全局变量
    --fontSize: 1rem; // 变量
    --mainColor: #12345678;
    --highlightColor: hwb(190, 35%, 20%)
}

body {
    color: var(--mainColor)
}

:root {
    --centered: {
        display: flex;
        align-items: center;
        justify-content: center;
    }
}
.centered {
    @apply --centered;
}

calc: css表达式
calc(15px * 2);

image-set (
    url(img/test.png) 1x,
    url(img/test-2x.png) 2x
)

filter 滤镜

css正则
[frame=hsides i] { // 忽略hsides大小写

}

使用webpack的css-loader即可编译， 添加modules

使用postcss进行编译css
使用postcss-preset-env 编译cssnext语法

### postcss插件集
postcss-custom-properties 运行时变量
postcss-simple-vars 与scss一致的变量实现
postcss-mixins 实现类似sass的@mixin的功能
postcss-extend 实现类似sass的继承功能
postcss-import实现类似sass的import
cssnext面向未来，cssgrace修复过去，兼容ie6

https://cssdb.org

autoprefixer 已经被继承，不需要用了。

### css-doodle
是一个webcomonent
<css-doodle>
</css-doodle>

### Houdini
css魔术师  js in css

js -> style -> layoout -> paint -> composite

在现今的web开发中，js几乎占据所有版面，除了控制页面逻辑与操作DOM对象外，连css都直接写在js里面了，就算浏览器还没实现的特性，总会有人做出对应的polyfills, 让你快速的将新Feature应用到Production环境中，更别提我们还有Babel等工具帮忙转移。

而css就不同了

- Parser, Paint, Layout
- Worklets实战
- Properties/ Values
- Typed OM Object

