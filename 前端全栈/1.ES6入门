ECMAScript(ECMA, ES)是一个**标准**;
Javascript是ECMAScript的**一种实现**;

### 数组变化
map: 遍历数组里面的每一个元素，返回值构成一个新的数组。新数组与原数组等长
filter: 遍历数组里面的每一个元素，返回值是一个新数组，新数组长度取决于过滤函数的返回值，返回值为真，则保留，返回值为假则扔掉。
forEach: 遍历数组里面的每一个元素。无返回值。
reduce: 汇总，进去一堆，出来一个。
```
arr.reduce(tmp, item, index) => {
  // tmp为上一次的返回值，第一次为第一个值，item第一次为第二个值，
})

Array.from(document.getElementsByTagName('div')).forEach((dom) => {})
```
### json变化
- 省略写法
```
const data = 10;
{ data }

{
    show () {
        console.log("json方法简写")
    }
}
```

### 字符串
- startsWidth() // 是否以某个字符串开头
```
if (name.startsWidth("159")) {
    console.log("159号段");
}
```
- endWidth() // 是否以某个字符串结尾
```
if (name.endWidth(".txt")) {
    console.log("文本文件");
}
```
### 面向对象
```
class Person {
  constructor(name, age) {
      super(name, age)
      this.name = name;
      this.age = age;
  }
  get() {
      console.log("方法")
  }
}

```

### Promise
promise -- 异步，同步化

### generater
是对promise 的封装

### async/await
是对generater的封装

### 模块化
import

### 语法糖