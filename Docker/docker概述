### 部署软件的问题
如果想让软件运行起来要保证操作系统的设置，各种库和组件的安装都是正确的。
热带鱼&冷水鱼，冷水鱼适应的水温在5-30度，热热带鱼只能适应22-30度水温，低于22度半小时就冻死了。

为了环境一致，最早采用的是虚拟机，在电脑里面虚拟了一个完全的隔了的虚拟系统。

### 虚拟机
虚拟机就是带环境安装的一种解决方案，它可以在一种操作系统里运行另一种操作系统
资源占用多
冗余步骤多
启动速度慢

### Linux 容器
由于虚拟机存在这些缺点，Linux发展出另一种虚拟化技术，Linux容器 Linux Containers 简写 LXC
Linux容器不是模拟一个完整的操作系统而是针对进程进行隔离，或者说，在正常进程的外面套了一个保护层，对于容器里面的进程来说，他接触到的各种资源都是虚拟的，从而实现与底层系统的隔离
启动快
占用资源少
体积少

### Docker 是什么
Docker 属于Linux的一种封装，提供简单易用的容器使用接口，它是目前最流行的Linux容器解决方案。
Docker 将应用程序与该程序的依赖，打包在一个文件里面，运行这个文件，就会生成一个虚拟容器，程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。

### docker 和 KVM 虚拟机
- 启动时间
docker秒级启动
KVM 分钟级别启动

- 轻量级容器镜像通畅以M为单位，虚拟机以G为单位，容器资源占用小，要比虚拟机要部署更快速
容器共享宿主机器内核，系统级虚拟化，占用资源少，容器性能基本接近物理机
虚拟机需要虚拟化一些设备，具有完整的PS虚拟机开销大，因而降低性能，没有容器性能好。

- 安全性
由于共享宿主机内核，只是进程隔离，因此隔离性和稳定性不如虚拟机，容器具有一定权限访问宿主机内核，存在一些安全隐患

- 使用要求
KVM基于硬件的完全虚拟化，需要硬性CPU虚拟化技术支持
容器共享宿主机内核，可运行在主机的linux的发行版，不用考虑CPU是否支持虚拟化技术

### docker的使用场景
- 节省项目环境部署时间 
单项目打包
整套项目打包
新开源技术试用
- 环境一致性
- 持续集成
- 微服务
- 弹性伸缩

### Docker 体系结构
containerd 是一个守护进程。使用runC
可以通过镜像生成容器。

### Docker 内部组件

### docker 安装
docker分为企业版EE和社区版CE
网址 https://docs.docker.com/install/linux/docker-ce/centos/
选择CE版本安装，免费社区版

https://blog.csdn.net/yimenglin/article/details/93718784

查看是否有docker安装源
```
yum list | grep docker;
```
设置安装源
```
// sudo yum install -y yum-utils;
yum-config-manager
--add-repo
https://download.docker
```
安装过程:
```
// 卸载老版本
$ sudo yum remove docker \
                docker-client \
                docker-client-latest \
                docker-common \
                docker-latest \
                docker-latest-logrotate \
                docker-logrotate \
                docker-engine

// 设置镜像源
sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
// 安装docker
sudo yum install docker-ce docker-ce-cli containerd.io
// 启动docker
sudo systemctl start docker
// 运行 
sudo docker run hello-world
```

### docker架构
客户端: 将命令下发给docker daemon后台，后台去远程仓库拉取镜像，放在本地images镜像仓库
docker pull --> docker daemon --> registry --> images(docker服务器)
docker run --> docker daemon(Images) --> Containers(容器)
docker build ---> docker daemon(Images) : 基于已有镜像构建

### 阿里云加速